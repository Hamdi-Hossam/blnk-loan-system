# Generated by Django 5.1.3 on 2024-11-15 14:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('total_funds', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='loans.bank')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='loans.role')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankPersonnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_personnel', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoanCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_income', models.DecimalField(decimal_places=2, max_digits=15)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loan_customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoanFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_type', models.CharField(max_length=100)),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_duration', models.IntegerField(help_text='Minimum duration in months')),
                ('max_duration', models.IntegerField(help_text='Maximum duration in months')),
                ('is_active', models.BooleanField(default=True)),
                ('bank_personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_loan_funds', to='loans.bankpersonnel')),
                ('customers', models.ManyToManyField(related_name='loan_funds', to='loans.loancustomer')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('min_duration', models.IntegerField(help_text='Minimum duration in months')),
                ('max_duration', models.IntegerField(help_text='Maximum duration in months')),
                ('is_totally_paid', models.BooleanField(default=False)),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('requested_duration', models.IntegerField(help_text='Requested duration in months')),
                ('is_accepted', models.BooleanField(default=False)),
                ('bank_personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_loans', to='loans.bankpersonnel')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='loans.loancustomer')),
                ('loan_fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='loans.loanfund')),
            ],
        ),
        migrations.CreateModel(
            name='LoanProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_funds', models.DecimalField(decimal_places=2, max_digits=15)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loan_provider', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TotalFunds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fund_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fund_date', models.DateField()),
                ('loan_fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loans.loanfund')),
                ('loan_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loans.loanprovider')),
            ],
        ),
        migrations.AddField(
            model_name='loanfund',
            name='providers',
            field=models.ManyToManyField(related_name='loan_funds', through='loans.TotalFunds', to='loans.loanprovider'),
        ),
    ]
